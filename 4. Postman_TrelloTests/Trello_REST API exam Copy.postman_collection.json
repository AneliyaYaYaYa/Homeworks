{
	"info": {
		"_postman_id": "340fcd5c-0f7e-4933-8f5c-9c4d5ee41afe",
		"name": "Trello_REST API exam Copy",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "28723998"
	},
	"item": [
		{
			"name": "Test the account",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Response body is not empty\", function () {\r",
							"    pm.response.to.be.withBody;\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"//console.log(jsonData.id);\r",
							"//console.log(jsonData.fullName);\r",
							"//pm.collectionVariables.set(\"users_name\", jsonData.fullName);\r",
							"//pm.collectionVariables.set(\"users_id\", jsonData.id);\r",
							"//pm.collectionVariables.set(\"users_email\", jsonData.email);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_URL}}{{API_version}}{{MEMBERS_ENDPOINT}}/me?key={{my_key}}&token={{my_token}}",
					"host": [
						"{{base_URL}}{{API_version}}{{MEMBERS_ENDPOINT}}"
					],
					"path": [
						"me"
					],
					"query": [
						{
							"key": "key",
							"value": "{{my_key}}"
						},
						{
							"key": "token",
							"value": "{{my_token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create a board",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Key contains board id\", function () {\r",
							"    pm.expect(jsonData.id.length).to.gt(0);\r",
							"\r",
							"});\r",
							"\r",
							"pm.test(\"Verify Board name\", function () {\r",
							"    pm.expect(jsonData.name).to.eql(pm.collectionVariables.get(\"board_name\"));\r",
							"\r",
							"});\r",
							"\r",
							"console.log(pm.response.json().id)\r",
							"console.log(jsonData.name)\r",
							"pm.collectionVariables.set(\"board_id\", jsonData.id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\r\n  \"name\": \"{{board_name}}\",\r\n  \r\n  \"desc\": \"testing the API\",\r\n\r\n  \"key\": \"{{my_key}}\",\r\n\r\n  \"token\": \"{{my_token}}\"\r\n\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_URL}}{{API_version}}{{BOARDS_ENDPOINT}}?key={{my_key}}&token={{my_token}}",
					"host": [
						"{{base_URL}}{{API_version}}{{BOARDS_ENDPOINT}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{my_key}}"
						},
						{
							"key": "token",
							"value": "{{my_token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create a list",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"var jsonData = pm.response.json();\r",
							"pm.test(\"Key contains list id\", function () {\r",
							"    pm.expect(jsonData.id.length).to.gt(0);\r",
							"\r",
							"});\r",
							"pm.test(\"List creaetd with a valid name\", function () {\r",
							"    pm.expect(jsonData.name).to.eq(pm.collectionVariables.get(\"list_name\"));\r",
							"\r",
							"});\r",
							"console.log(jsonData.name)\r",
							"pm.collectionVariables.set(\"list_id\", jsonData.id);\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\r\n\"name\": \"{{list_name}}\",\r\n  \r\n  \"desc\": \"testing the API - lists\",\r\n\r\n  \"key\": \"{{my_key}}\",\r\n\r\n  \"token\": \"{{my_token}}\"\r\n\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_URL}}{{API_version}}{{LIST_ENDPOINT}}?name={{list_name}}&idBoard={{board_id}}&key={{my_key}}&token={{my_token}}",
					"host": [
						"{{base_URL}}{{API_version}}{{LIST_ENDPOINT}}"
					],
					"query": [
						{
							"key": "name",
							"value": "{{list_name}}"
						},
						{
							"key": "idBoard",
							"value": "{{board_id}}"
						},
						{
							"key": "key",
							"value": "{{my_key}}"
						},
						{
							"key": "token",
							"value": "{{my_token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create a card",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Card contains card id\", function () {\r",
							"    pm.expect(jsonData.id.length).to.gt(0);\r",
							"\r",
							"});\r",
							"\r",
							"pm.test(\"Verify card name\", function () {\r",
							"    pm.expect(jsonData.name).to.eq(pm.collectionVariables.get(\"card_name\"));\r",
							"\r",
							"});\r",
							"console.log(pm.response.json().id)\r",
							"pm.collectionVariables.set(\"card_id\", jsonData.id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\r\n  \"name\": \"{{card_name}}\",\r\n  \r\n  \"desc\": \"testing the API\",\r\n\r\n  \"key\": \"{{my_key}}\",\r\n\r\n  \"token\": \"{{my_token}}\"\r\n\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_URL}}{{API_version}}{{CARD_ENDPOINT}}?idList={{list_id}}&key={{my_key}}&token={{my_token}}",
					"host": [
						"{{base_URL}}{{API_version}}{{CARD_ENDPOINT}}"
					],
					"query": [
						{
							"key": "idList",
							"value": "{{list_id}}"
						},
						{
							"key": "key",
							"value": "{{my_key}}"
						},
						{
							"key": "token",
							"value": "{{my_token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Update a card",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Validate card updated - name contains updated\", function () {\r",
							"       pm.expect(jsonData.name).to.contain(\"updated\");\r",
							"});\r",
							"\r",
							"pm.test(\"Validate card updated - id\", function () {\r",
							"    pm.expect(jsonData.id).to.eq(pm.collectionVariables.get(\"card_id\"));\r",
							"});\r",
							"\r",
							"\r",
							"console.log(pm.response.json().id)\r",
							"pm.collectionVariables.set(\"card_id\", jsonData.id)"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\r\n  \"name\": \"my updated card\",\r\n  \r\n  \"desc\": \"updated description\",\r\n\r\n  \"key\": \"{{my_key}}\",\r\n\r\n  \"token\": \"{{my_token}}\"\r\n\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_URL}}{{API_version}}{{CARD_ENDPOINT}}/{{card_id}}?key={{my_key}}&token={{my_token}}",
					"host": [
						"{{base_URL}}{{API_version}}{{CARD_ENDPOINT}}"
					],
					"path": [
						"{{card_id}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{my_key}}"
						},
						{
							"key": "token",
							"value": "{{my_token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Update a card - advanced",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Validate card color\", function () {\r",
							"    pm.expect(jsonData.cover.color).to.eql(pm.collectionVariables.get(\"card_color\"));\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"console.log(pm.response.json().cover.color)\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"my card with color\",\r\n\r\n  \"cover\": {\r\n      \"color\": \"{{card_color}}\",\r\n      \"brightness\": \"{{card_brightness}}\"\r\n  },\r\n\r\n  \"key\": \"{{my_key}}\",\r\n\r\n  \"token\": \"{{my_token}}\"\r\n\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_URL}}{{API_version}}{{CARD_ENDPOINT}}/{{card_id}}?key={{my_key}}&token={{my_token}}",
					"host": [
						"{{base_URL}}{{API_version}}{{CARD_ENDPOINT}}"
					],
					"path": [
						"{{card_id}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{my_key}}"
						},
						{
							"key": "token",
							"value": "{{my_token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete a board",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_URL}}{{API_version}}{{BOARDS_ENDPOINT}}/{{board_id}}?key={{my_key}}&token={{my_token}}",
					"host": [
						"{{base_URL}}{{API_version}}{{BOARDS_ENDPOINT}}"
					],
					"path": [
						"{{board_id}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{my_key}}"
						},
						{
							"key": "token",
							"value": "{{my_token}}"
						}
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "basic",
		"basic": [
			{
				"key": "password",
				"value": "",
				"type": "string"
			},
			{
				"key": "username",
				"value": "aneliya.boneva.a50@learn.telerikacademy.com",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"pm.test(\"Status code is 200 - OK\", function () {",
					"    pm.response.to.have.status(200);",
					"});"
				]
			}
		}
	],
	"variable": [
		{
			"key": "my_id",
			"value": ""
		},
		{
			"key": "my_email",
			"value": ""
		},
		{
			"key": "users_id",
			"value": ""
		},
		{
			"key": "users_email",
			"value": ""
		},
		{
			"key": "users_name",
			"value": ""
		},
		{
			"key": "board_id",
			"value": ""
		},
		{
			"key": "list_name",
			"value": "My first List on a Board",
			"type": "string"
		},
		{
			"key": "list_id",
			"value": ""
		},
		{
			"key": "card_id",
			"value": ""
		},
		{
			"key": "card_color",
			"value": "orange",
			"type": "string"
		},
		{
			"key": "board_name",
			"value": "My First Trello Board",
			"type": "string"
		},
		{
			"key": "card_name",
			"value": "my first card",
			"type": "string"
		},
		{
			"key": "card_brightness",
			"value": "light",
			"type": "string"
		}
	]
}